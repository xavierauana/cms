<?php

namespace Anacreation\Cms\Tests\Feature\Links;

use Anacreation\Cms\Models\Language;
use Anacreation\Cms\Models\Link;
use Anacreation\Cms\Models\Menu;
use Anacreation\Cms\Tests\TestCase;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Http\UploadedFile;
use Illuminate\Support\Facades\File;

class LinksWithImagesTest extends TestCase
{
    use RefreshDatabase;

    private $languages;
    private $defaultLanguage;

    public function setUp() {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->languages = factory(Language::class,
                                   2)->create();
        $this->defaultLanguage = factory(Language::class)->create([
                                                                      'is_default' => true,
                                                                  ]);
    }


    /**
     * @test
     */
    public function upload_images() {

        $this->withoutExceptionHandling();

        app()->setLocale($this->defaultLanguage->code);

        $this->adminSingIn(['create_link']);
        $fileName = "dummy_img.jpg";
        $path = __DIR__.'/../../../test_resources/dummy_img.jpg';
        $data = $this->createData($path);
        $this->createLink($data);
        /** @var Link $link */
        $link = Link::whereExternalUri("http://www.google.com")->first();

        $this->assertEquals("http://localhost:8000/storage/".$link->id."/".$fileName,
                            $link->getImage());

        File::copy($link->getImagePath(),
                   $path);
    }

    /**
     * @test
     */
    public function update_link_with_another_image() {

        //        $this->withoutExceptionHandling();
        app()->setLocale($this->defaultLanguage->code);

        $this->adminSingIn(['create_link', 'update_link', 'edit_link']);

        $path = __DIR__.'/../../../test_resources/dummy_img.jpg';
        $menu = $this->createLink($this->createData($path));

        /** @var Link $link */
        $link = Link::first();

        File::move($link->getImagePath(),
                   $path);

        $updateUri = route('menus.links.update',
                           [$menu, $link]);
        $fileName = 'dummy_img2.jpg';
        $path = __DIR__.'/../../../test_resources/'.$fileName;
        $newData = $this->createData($path);

        $this->put($updateUri,
                   $newData);

        $link->refresh();

        $array = explode("/",
                         $link->getImage());

        $this->assertEquals($fileName,
                            end($array));

        File::move($link->getImagePath(),
                   $path);
    }

    private function createData($path) {

        $file = new UploadedFile($path,
                                 "file.png");

        return [
            'name'         => [
                [
                    'lang_id' => $this->defaultLanguage->id,
                    'content' => "the link",
                ],
            ],
            'is_active'    => true,
            'parent_id'    => 0,
            'page_id'      => 0,
            'external_uri' => "http://www.google.com",
            'files'        => [
                [
                    'file'    => $file,
                    'lang_id' => $this->defaultLanguage->id,
                ],
            ],
        ];
    }

    /**
     * @return array
     */
    private function createLink(array $data) {
        $menu = factory(Menu::class)->create();

        $uri = route('menus.links.store',
                     $menu);

        $this->post($uri,
                    $data);

        return $menu;
    }

    /**
     * @test
     */
    public function remove_image_only() {

        $this->withoutExceptionHandling();

        app()->setLocale($this->defaultLanguage->code);

        $this->adminSingIn(['create_link', 'edit_link']);

        $fileName = 'dummy_img2.jpg';
        $path = __DIR__.'/../../../test_resources/'.$fileName;

        $menu = $this->createLink($this->createData($path));

        $link = Link::whereExternalUri("http://www.google.com")->first();

        $deleteImageUri = route('menus.links.image.delete',
                                [$menu, $link, $this->defaultLanguage->code]);

        File::copy($link->getImagePath(),
                   $path);

        $this->delete($deleteImageUri)->assertRedirect();

        $link->refresh();

        $this->assertNull($link->getImage());
    }

}
